#
# CircleCI v2
#
# Documentation:
# https://circleci.com/docs/2.0/configuration-reference/
#
version: 2

# This defines a list of jobs
# that will be executed after.
jobs:

    # Define a job called 'build'.
    build:

        # This job runs in a docker container.
        docker:
            # Run in an Ubuntu environment.
            - image: tiangolo/uwsgi-nginx-flask
              # These are the list of environment
              # variables that will be passed
              # to the application test.
              environment:
                PYTEST: true
                DEBUG: true
                TERM: xterm

        # In which directory
        # to run the steps?
        working_directory: ~/app-circleci-tests

        # These are the list of steps
        # to be performaned for this job.
        steps:

            # Checkout source code.
            - checkout
            - run: git submodule sync
            - run: git submodule update --init

            # Update environment.
            - run:
                name: "Update Operating System."
                command: |
                    apt-get update -y

            # Install dependencies.
            - run:
                name: "Install Operating System  dependencies."
                command: |
                    apt-get install -y python3-pip python3 python3-virtualenv
                    apt-get install python-flake8 python3-flake8 python3-venv git 

            # Restore from cache.
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "requirements.txt" }}

            # Create virtual environment.
            - run:
                name: "Install Python virtual environment."
                command: |
                    python3 -m venv .env
                    . .env/bin/activate
                    pip install --upgrade pip
                    pip install -r ./requirements.txt

            # Save the virtualenv into
            # cache so that we don't install
            # dependencies more than once.
            - save_cache:
                key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
                paths:
                    - ".env"

            # Run your tests using pytest.
            - run:
                name: "Run unit tests."
                command: |
                    ./bin/test.sh

            # Run flake8.
            - run:
                name: "Run flake8 tests."
                command: |
                    ./bin/flake8.sh

    # Define a job called 'deploy-prod'.
    deploy-prod:

        # Deploy the application
        # in this generic docker image.
        docker:
            - image: docker:stable-git

        # In which directory
        # to run the steps?
        working_directory: ~/app-circleci-tests

        # These are the steps
        # that will be executed to
        # deploy the application.
        steps:

            # Setup Docker connection.
            - setup_remote_docker

            # Checkout code.
            - checkout

            # Update submodules.
            - run:
                name: Update submodules.
                command: |
                    git submodule sync
                    git submodule update --init

            # Do login using
            # DOCKERHUB_USERNAME and
            # DOCKERHUB_PASSWORD
            # environment variables.
            - run:
                name: Login to DockerHub
                command: ./bin/login.sh

            # Deploy to PROD production environment.
            - run:
                name: Build and push to dockerhub
                command: ./bin/deploy.sh PROD

    # Define a job called 'deploy-qa'.
    deploy-dev:

        # Deploy the application
        # in this generic docker image.
        docker:
            - image: docker:stable-git

        # In which directory
        # to run the steps?
        working_directory: ~/app-circleci-tests

        # These are the steps
        # that will be executed to
        # deploy the application.
        steps:

            # Setup Docker connection.
            - setup_remote_docker

            # Checkout code.
            - checkout

            # Update submodules.
            - run:
                name: Update submodules.
                command: |
                    git submodule sync
                    git submodule update --init

            # Do login using
            # DOCKERHUB_USERNAME and
            # DOCKERHUB_PASSWORD
            # environment variables.
            - run:
                name: Login to DockerHub
                command: ./bin/login.sh

            # Deploy to QA test environment.
            - run:
                name: Build and push to dockerhub
                command: ./bin/deploy.sh QA

# This defines the
# order in which the
# jobs are executed
# and the dependencies.
workflows:

    # This uses CircleCI v2.0.
    version: 2

    # Define the name of this
    # workflow.
    test_and_build:

        # Jobs that will be
        # executed in order.
        jobs:

            # First, build and test.
            - build

            # Deploy to PROD only
            # if you are at the
            # master branch.
            - deploy-prod:
                requires:
                    - build
                filters:
                    branches:
                        only: master

            # Deploy to QA only
            # if you are in the
            # dev branch.
            - deploy-dev:
                requires:
                    - build
                filters:
                    branches:
                        only: dev 
