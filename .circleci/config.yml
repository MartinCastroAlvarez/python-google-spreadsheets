#
# CircleCI v2
#
# Documentation:
# https://circleci.com/docs/2.0/configuration-reference/
#
version: 2

# This defines a list of jobs
# that will be executed after.
jobs:

    # Define a job called 'unit-tests'.
    unit-tests:
        # This job runs in a docker container.
        docker:
            # Run in an Ubuntu environment.
            - image: circleci/python:3.6.1
              # These are the list of environment
              # variables that will be passed
              # to the application test.
              environment:
                TERM: xterm
        # In which directory
        # to run the steps?
        working_directory: ~/wolverine
        # These are the list of steps
        # to be performaned for this job.
        steps:
            # Checkout source code.
            - checkout
            # Update git submodules.
            - run:
                name: "Updating submodules."
                command: |
                    git submodule sync
                    git submodule update --init
            # Install dependencies.
            - run:
                name: "Installing Operating System  dependencies."
                command: |
                    sudo apt-get install -y python3-pip python3 python3-virtualenv
                    sudo apt-get install -y python-flake8 python3-flake8 python3-venv git 
            # Restore from cache.
            - restore_cache:
                key: wolverine-{{ .Branch }}-{{ checksum "requirements.txt" }}
            # Create virtual environment.
            - run:
                name: "Installing Python virtual environment."
                command: |
                    python3 -m venv .env
                    . .env/bin/activate
                    pip install -r requirements.txt
            # Save the virtualenv into
            # cache so that we don't install
            # dependencies more than once.
            - save_cache:
                key: wolverine-{{ .Branch }}-{{ checksum "requirements.txt" }}
                paths:
                    - ".env"
            # Run your tests using pytest.
            - run:
                name: "Running unit tests."
                command: |
                    ./bin/test.sh

    # Define a job called 'qa-tests'.
    qa-tests:
        # This job runs in a docker container.
        docker:
            # Run in an Ubuntu environment.
            - image: valleyworksinfra/circleci_deploy
              # These are the list of environment
              # variables that will be passed
              # to the application test.
              environment:
                TERM: xterm
        # In which directory
        # to run the steps?
        working_directory: ~/wolverine
        # These are the list of steps
        # to be performaned for this job.
        steps:
            # Setup Docker connection.
            - setup_remote_docker
            # Checkout source code.
            - checkout
            # Update git submodules.
            - run:
                name: "Updating submodules."
                command: |
                    git submodule sync
                    git submodule update --init
            # Starting an Elasticsearch intance.
            - run:
                name: "Starting Elasticsearch."
                command: |
                    ./bin/elasticsearch.sh
            # Starting a Cassandra cluster.
            - run:
                name: "Starting Cassandra."
                command: |
                    ./bin/cassandra.sh
            # Restore from cache.
            - restore_cache:
                key: wolverine-{{ .Branch }}-{{ checksum "requirements.txt" }}
            # Create virtual environment.
            - run:
                name: "Installing Python virtual environment."
                command: |
                    python3 -m venv .env
                    . .env/bin/activate
                    pip install -r requirements.txt
            # Save the virtualenv into
            # cache so that we don't install
            # dependencies more than once.
            - save_cache:
                key: wolverine-{{ .Branch }}-{{ checksum "requirements.txt" }}
                paths:
                    - ".env"
            # Run your tests using pytest.
            - run:
                name: "Running QA functional tests."
                command: |
                    ./bin/test.sh QA

    # Define a job called 'pylint'.
    pylint:
        # This job runs in a docker container.
        docker:
            # Run in an Ubuntu environment.
            - image: circleci/python:3.6.1
        # In which directory
        # to run the steps?
        working_directory: ~/wolverine
        # These are the list of steps
        # to be performaned for this job.
        steps:
            # Setup Docker connection.
            - setup_remote_docker
            # Checkout source code.
            - checkout
            # Update git submodules.
            - run:
                name: "Updating submodules."
                command: |
                    git submodule sync
                    git submodule update --init
            # Install dependencies.
            - run:
                name: "Installing Operating System dependencies."
                command: |
                    sudo apt-get install -y python3-pip python3 python3-virtualenv
                    sudo apt-get install -y python-flake8 python3-flake8 python3-venv git 
            # Restore packages from cache.
            - restore_cache:
                key: wolverine-{{ .Branch }}-{{ checksum "requirements.txt" }}
            # Create virtual environment.
            - run:
                name: "Installing Python virtual environment."
                command: |
                    python3 -m venv .env
                    . .env/bin/activate
                    pip install -r requirements.txt
            # Run your tests using pytest.
            - run:
                name: "Running pylint tests."
                command: |
                    ./bin/pylint.sh
            # Save the virtualenv into
            # cache so that we don't install
            # dependencies more than once.
            - save_cache:
                key: wolverine-{{ .Branch }}-{{ checksum "requirements.txt" }}
                paths:
                    - ".env"

    # Define a job called 'pep8'.
    pep8:
        # This job runs in a docker container.
        docker:
            # Run in an Ubuntu environment.
            - image: circleci/python:3.6.1
              # These are the list of environment
              # variables that will be passed
              # to the application test.
              environment:
                TERM: xterm
        # In which directory
        # to run the steps?
        working_directory: ~/wolverine
        # These are the list of steps
        # to be performaned for this job.
        steps:
            # Checkout source code.
            - checkout
            # Update git submodules.
            - run:
                name: "Updating git submodules."
                command: |
                    git submodule sync
                    git submodule update --init
            # Install dependencies.
            - run:
                name: "Installing Operating System dependencies."
                command: |
                    sudo apt-get install -y python3-pip python3 python3-virtualenv
                    sudo apt-get install -y python-flake8 python3-flake8 python3-venv git 
            # Restore packages from cache.
            - restore_cache:
                key: wolverine-{{ .Branch }}-{{ checksum "requirements.txt" }}
            # Create virtual environment.
            - run:
                name: "Installing Python virtual environment."
                command: |
                    python3 -m venv .env
                    . .env/bin/activate
                    pip install -r requirements.txt
            # Run flake8.
            - run:
                name: "Running flake8 tests."
                command: |
                    ./bin/flake8.sh
            # Save the virtualenv into
            # cache so that we don't install
            # dependencies more than once.
            - save_cache:
                key: wolverine-{{ .Branch }}-{{ checksum "requirements.txt" }}
                paths:
                    - ".env"

    # Define a job called 'deploy-prod'.
    deploy-prod:
        # Deploy the application
        # in this generic docker image.
        docker:
            - image: valleyworksinfra/circleci_deploy
        # In which directory
        # to run the steps?
        working_directory: ~/wolverine
        # These are the steps
        # that will be executed to
        # deploy the application.
        steps:
            # Setup Docker connection.
            - setup_remote_docker
            # Checkout code.
            - checkout
            # Update submodules.
            - run:
                name: "Updating git submodules."
                command: |
                    git submodule sync
                    git submodule update --init
            # Do login using
            # DOCKERHUB_USERNAME and
            # DOCKERHUB_PASSWORD
            # environment variables.
            - run:
                name: "Autheticating to DockerHub."
                command: ./bin/login.sh
            # Restore packages from cache.
            - restore_cache:
                key: wolverine-deploy-prod-{{ .Branch }}-{{ checksum "requirements.txt" }}
            # Deploy to PROD production environment.
            - run:
                name: "Building and pushing to DockerHub."
                command: ./bin/deploy.sh PROD
            # Remember requirements.txt packages.
            - save_cache:
                key: wolverine-deploy-prod-{{ .Branch }}-{{ checksum "requirements.txt" }}
                paths:
                    - "/usr/lib/python3.6/site-packages"

    # Define a job called 'deploy-qa'.
    deploy-qa:
        # Deploy the application
        # in this generic docker image.
        docker:
            - image: valleyworksinfra/circleci_deploy
        # In which directory
        # to run the steps?
        working_directory: ~/wolverine
        # These are the steps
        # that will be executed to
        # deploy the application.
        steps:
            # Setup Docker connection.
            - setup_remote_docker
            # Checkout code.
            - checkout
            # Update submodules.
            - run:
                name: "Updating git submodules."
                command: |
                    git submodule sync
                    git submodule update --init
            # Do login using
            # DOCKERHUB_USERNAME and
            # DOCKERHUB_PASSWORD
            # environment variables.
            - run:
                name: "Autheticating to DockerHub."
                command: ./bin/login.sh
            # Restore packages from cache.
            - restore_cache:
                key: wolverine-deploy-qa-{{ .Branch }}-{{ checksum "requirements.txt" }}
            # Deploy to QA test environment.
            - run:
                name: "Building and pushing to DockerHub."
                command: ./bin/deploy.sh QA
            # Remember requirements.txt packages.
            - save_cache:
                key: wolverine-deploy-qa-{{ .Branch }}-{{ checksum "requirements.txt" }}
                paths:
                    - "/usr/lib/python3.6/site-packages"

# This defines the
# order in which the
# jobs are executed
# and the dependencies.
workflows:
    # This uses CircleCI v2.0.
    version: 2
    # Define the name of this
    # workflow.
    test_and_build:
        # Jobs that will be
        # executed in order.
        jobs:
            # Run pep8 tests.
            - pep8
            # Run pylint tests.
            - pylint:
                requires:
                    - pep8
            # Run unit tests.
            - unit-tests:
                requires:
                    - pep8
